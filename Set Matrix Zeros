#include <bits/stdc++.h>

void setZeros(vector<vector<int>> &matrix)
{
 int rows = matrix.size();
    int cols = matrix[0].size();

    // Create flags to track if the first row and column have zeros
    bool firstRowZero = false;
    bool firstColZero = false;

    // Step 1: Check if the first row contains zero
    for (int j = 0; j < cols; j++) {
        if (matrix[0][j] == 0) {
            firstRowZero = true;
            break;
        }
    }

    // Step 2: Check if the first column contains zero
    for (int i = 0; i < rows; i++) {
        if (matrix[i][0] == 0) {
            firstColZero = true;
            break;
        }
    }

    // Step 3: Use the first row and first column as markers for zero elements
    for (int i = 1; i < rows; i++) {
        for (int j = 1; j < cols; j++) {
            if (matrix[i][j] == 0) {
                matrix[i][0] = 0; // Mark the corresponding row
                matrix[0][j] = 0; // Mark the corresponding column
            }
        }
    }

    // Step 4: Set rows to zeros based on markers in the first column
    for (int i = 1; i < rows; i++) {
        if (matrix[i][0] == 0) {
            for (int j = 1; j < cols; j++) {
                matrix[i][j] = 0; // Set the entire row to zeros
            }
        }
    }

    // Step 5: Set columns to zeros based on markers in the first row
    for (int j = 1; j < cols; j++) {
        if (matrix[0][j] == 0) {
            for (int i = 1; i < rows; i++) {
                matrix[i][j] = 0; // Set the entire column to zeros
            }
        }
    }

    // Step 6: Set the first row to zeros if necessary
    if (firstRowZero) {
        for (int j = 0; j < cols; j++) {
            matrix[0][j] = 0; // Set the first row to zeros
        }
    }

    // Step 7: Set the first column to zeros if necessary
    if (firstColZero) {
        for (int i = 0; i < rows; i++) {
            matrix[i][0] = 0; // Set the first column to zeros
        }
    }
}

