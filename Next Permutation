#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> nextPermutation(vector<int>& permutation, int n) {
    // Find the first element from the right that is smaller than its next element
    int i = n - 2;
    while (i >= 0 && permutation[i] >= permutation[i + 1]) {
        i--;
    }

    if (i >= 0) {
        // Find the element just larger than permutation[i] in the suffix
        int j = n - 1;
        while (j > i && permutation[j] <= permutation[i]) {
            j--;
        }

        // Swap the two elements
        swap(permutation[i], permutation[j]);
    }

    // Reverse the suffix from i+1 to the end
    reverse(permutation.begin() + i + 1, permutation.end());

    return permutation;
}

int main() {
    int n;
    cout << "Enter the number of elements: ";
    cin >> n;

    vector<int> permutation(n);
    cout << "Enter the permutation: ";
    for (int i = 0; i < n; i++) {
        cin >> permutation[i];
    }

    vector<int> nextPerm = nextPermutation(permutation, n);

    cout << "Next permutation: ";
    for (int i = 0; i < n; i++) {
        cout << nextPerm[i] << " ";
    }
    cout << endl;

    return 0;
}
